-- Quick Test Script - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç syntax ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß
-- ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô

USE MyKidsDB;
GO

PRINT '=== üß™ MyKids Quick Test ===';
PRINT 'Testing database...';
PRINT '';

-- ===== 1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Tables ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢ =====
PRINT '1. üìã Testing Tables...';

PRINT 'Children table:';
SELECT COUNT(*) FROM Children;

PRINT 'GoodBehaviors table:';
SELECT COUNT(*) FROM GoodBehaviors;

PRINT 'BadBehaviors table:';
SELECT COUNT(*) FROM BadBehaviors;

PRINT 'Rewards table:';
SELECT COUNT(*) FROM Rewards;

PRINT 'ActivityLogs table:';
SELECT COUNT(*) FROM ActivityLogs;

PRINT '‚úÖ Tables OK';
PRINT '';

-- ===== 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Views =====
PRINT '2. üëÅÔ∏è Testing Views...';

PRINT 'Children with points:';
SELECT * FROM vw_ChildrenPoints;

PRINT 'Recent activities:';
SELECT TOP 3 
    ChildName, 
    ActivityType, 
    ActivityName, 
    Points,
    ActivityDate
FROM vw_AllActivities 
ORDER BY ActivityDate DESC;

PRINT '‚úÖ Views OK';
PRINT '';

-- ===== 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• =====
PRINT '3. üìù Testing Insert...';

-- ‡∏•‡∏≠‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏á‡∏≤‡∏ô‡∏î‡∏µ
INSERT INTO ActivityLogs (ChildId, ActivityType, ActivityId, Points, Note)
VALUES ('child-1', 'good', 'behavior-1', 3, 'Test insert');

PRINT 'Test data inserted';

-- ‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
PRINT 'Updated points:';
SELECT 
    ChildName,
    TotalPoints,
    EarnedPoints
FROM vw_ChildrenPoints
WHERE ChildId = 'child-1';

-- ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö
DELETE FROM ActivityLogs WHERE Note = 'Test insert';
PRINT 'Test data cleaned';

PRINT '‚úÖ Insert/Delete OK';
PRINT '';

-- ===== 4. ‡∏™‡∏£‡∏∏‡∏õ =====
PRINT '=== üéØ SUMMARY ===';

DECLARE @ChildCount INT;
DECLARE @BehaviorCount INT;
DECLARE @ActivityCount INT;

SELECT @ChildCount = COUNT(*) FROM Children;
SELECT @BehaviorCount = COUNT(*) FROM GoodBehaviors;
SELECT @ActivityCount = COUNT(*) FROM ActivityLogs;

PRINT 'Children: ' + CAST(@ChildCount AS NVARCHAR(10));
PRINT 'Behaviors: ' + CAST(@BehaviorCount AS NVARCHAR(10));
PRINT 'Activities: ' + CAST(@ActivityCount AS NVARCHAR(10));

PRINT '';
PRINT 'üéâ ALL TESTS PASSED!';
PRINT 'Database is ready to use!';
PRINT '';
PRINT 'Next steps:';
PRINT '1. Start Node.js API server';
PRINT '2. Test with: curl http://localhost:3000/api/health';

-- ===== ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå =====
/*
-- ‡∏î‡∏π‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏î‡πá‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
SELECT * FROM vw_ChildrenPoints;

-- ‡∏î‡∏π‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
SELECT TOP 10 * FROM vw_AllActivities ORDER BY ActivityDate DESC;

-- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏á‡∏≤‡∏ô‡∏î‡∏µ
INSERT INTO ActivityLogs (ChildId, ActivityType, ActivityId, Points, Note)
VALUES ('child-1', 'good', 'behavior-1', 3, '‡πÅ‡∏õ‡∏£‡∏á‡∏ü‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß');

-- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡πÑ‡∏°‡πà‡∏î‡∏µ  
INSERT INTO ActivityLogs (ChildId, ActivityType, ActivityId, Points, Note)
VALUES ('child-1', 'bad', 'bad-1', -3, '‡∏û‡∏π‡∏î‡∏´‡∏¢‡∏≤‡∏ö');

-- ‡πÅ‡∏•‡∏Å‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Å‡πà‡∏≠‡∏ô)
DECLARE @Points INT = (SELECT TotalPoints FROM vw_ChildrenPoints WHERE ChildId = 'child-1');
DECLARE @Cost INT = (SELECT Cost FROM Rewards WHERE Id = 'reward-2');

IF @Points >= @Cost
BEGIN
    INSERT INTO ActivityLogs (ChildId, ActivityType, ActivityId, Points, Note)
    VALUES ('child-1', 'reward', 'reward-2', -@Cost, '‡πÅ‡∏•‡∏Å‡∏Ç‡∏ô‡∏°');
    PRINT 'Reward redeemed!';
END
ELSE
    PRINT 'Not enough points';

-- ‡∏î‡∏π‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
SELECT * FROM vw_DailySummary 
WHERE SummaryDate = CAST(GETDATE() AS DATE);
*/